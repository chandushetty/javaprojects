{"version":3,"sources":["./src/app/models/quiz.ts","./src/environments/environment.ts","./src/app/components/quiz-list/quiz-list.component.html","./src/app/components/quiz-list/quiz-list.component.ts","./src/app/components/quiz/quiz.component.ts","./src/app/components/quiz/quiz.component.html","./src/app/models/question.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/quiz-config.ts","./src/app/app.module.ts","./src/app/models/option.ts","./src/app/services/quiz.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { QuizConfig } from './quiz-config';\nimport { Question } from './question';\n\nexport class Quiz {\n    id: number;\n    name: string;\n    description: string;\n    config: QuizConfig;\n    questions: Question[];\n\n    constructor(data: any) {\n        if (data) {\n            this.id = data.id;\n            this.name = data.name;\n            this.description = data.description;\n            this.config = new QuizConfig(data.config);\n            //console.log(`config: ${JSON.stringify(this.config)}`);\n            this.questions = [];\n            data.questions.forEach(q => {\n                this.questions.push(new Question(q));\n            });\n        }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div *ngFor=\"let tempQuiz of quizes\" class=\"col-md-4\">\n      <div class=\"card\">\n        <img\n          src=\"{{ tempQuiz.imageUrl }}\"\n          class=\"card-img-top\"\n          alt=\"Quiz Image\"\n        />\n        <div class=\"card-body text-center\">\n          <h5 class=\"card-title\">\n            {{ tempQuiz.name }}\n          </h5>\n          <hr />\n          <p class=\"card-text\">\n            {{ tempQuiz.description }}\n          </p>\n          <a\n            routerLink=\"/quiz/{{ tempQuiz.name }}\"\n            class=\"btn btn-outline-primary\"\n            >Give {{ tempQuiz.name }} Quiz</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Quiz } from 'src/app/models/quiz';\nimport { QuizService } from 'src/app/services/quiz.service';\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.css'],\n})\nexport class QuizListComponent implements OnInit {\n  quizes: any[] = [];\n\n  constructor(private quizService: QuizService) {}\n\n  ngOnInit(): void {\n    this.quizes = this.quizService.getAll();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Option } from 'src/app/models/option';\nimport { Question } from 'src/app/models/question';\nimport { Quiz } from 'src/app/models/quiz';\nimport { QuizConfig } from 'src/app/models/quiz-config';\nimport { QuizService } from 'src/app/services/quiz.service';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css'],\n})\nexport class QuizComponent implements OnInit {\n  quizes: any[];\n  quiz: Quiz = new Quiz(null);\n  mode = 'quiz';\n  quizName: string;\n  quizScore: number;\n  quizTotalScore: number;\n\n  config: QuizConfig = {\n    allowBack: true,\n    allowReview: true,\n    autoMove: false, // if true, it will move to next question automatically when answered.\n    duration: 300, // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\n    pageSize: 1,\n    requiredAll: false, // indicates if you must answer all the questions before submitting.\n    richText: false,\n    shuffleQuestions: false,\n    shuffleOptions: false,\n    showClock: false,\n    showPager: true,\n    theme: 'none',\n  };\n\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1,\n  };\n  timer: any = null;\n  startTime: Date;\n  endTime: Date;\n  ellapsedTime = '00:00';\n  duration = '';\n\n  constructor(\n    private quizService: QuizService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.quizes = this.quizService.getAll();\n    this.quizScore = 0;\n    // this.quizName = this.quizes[0].id;\n    // this.loadQuiz(this.quizName);\n    this.route.paramMap.subscribe(() => {\n      this.handleQuiz();\n    });\n  }\n\n  handleQuiz() {\n    const quizName: string = this.route.snapshot.paramMap.get('quizName');\n    const quiz: any = this.quizes.find((o) => o.name === quizName);\n    const quizUrl: string = quiz.id;\n\n    this.loadQuiz(quizUrl);\n  }\n\n  loadQuiz(quizName: string) {\n    this.quizService.get(quizName).subscribe((res) => {\n      //console.log(`Quiz Name: ${quizName} Response: ${JSON.stringify(res)} ` )\n      this.quiz = new Quiz(res);\n      this.pager.count = this.quiz.questions.length;\n      this.quizTotalScore = this.quiz.questions.length;\n      this.startTime = new Date();\n      this.ellapsedTime = '00:00';\n      this.timer = setInterval(() => {\n        this.tick();\n      }, 1000);\n      this.duration = this.parseTime(this.config.duration);\n    });\n    this.mode = 'quiz';\n  }\n\n  tick() {\n    const now = new Date();\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\n    if (diff >= this.config.duration) {\n      this.onSubmit();\n    }\n    this.ellapsedTime = this.parseTime(diff);\n  }\n\n  parseTime(totalSeconds: number) {\n    let mins: string | number = Math.floor(totalSeconds / 60);\n    let secs: string | number = Math.round(totalSeconds % 60);\n    mins = (mins < 10 ? '0' : '') + mins;\n    secs = (secs < 10 ? '0' : '') + secs;\n    return `${mins}:${secs}`;\n  }\n\n  get filteredQuestions() {\n    return this.quiz.questions\n      ? this.quiz.questions.slice(\n          this.pager.index,\n          this.pager.index + this.pager.size\n        )\n      : [];\n  }\n\n  onSelect(question: Question, option: Option) {\n    if (question.questionTypeId === 1) {\n      question.options.forEach((x) => {\n        if (x.id !== option.id) x.selected = false;\n      });\n\n      if (this.isCorrect(question) == 'correct') {\n        this.quizScore = this.quizScore + 1;\n      }\n    }\n\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1);\n    }\n  }\n\n  goTo(index: number) {\n    if (index >= 0 && index < this.pager.count) {\n      this.pager.index = index;\n      this.mode = 'quiz';\n    }\n  }\n\n  isAnswered(question: Question) {\n    return question.options.find((x) => x.selected)\n      ? 'Answered'\n      : 'Not Answered';\n  }\n\n  isCorrect(question: Question) {\n    return question.options.every((x) => x.selected === x.isAnswer)\n      ? 'correct'\n      : 'wrong';\n  }\n\n  onSubmit() {\n    let answers = [];\n    this.quiz.questions.forEach((x) =>\n      answers.push({\n        quizId: this.quiz.id,\n        questionId: x.id,\n        answered: x.answered,\n      })\n    );\n\n    // Post your data to the server here. answers contains the questionId and the users' answer.\n    //console.log(this.quiz.questions);\n    this.mode = 'result';\n  }\n}\n","<div id=\"quiz\" class=\"container mt-5\">\n  <h2 class=\"text-center fw-bold text-uppercase\">{{ quiz.name }}</h2>\n  <hr />\n\n  <div *ngIf=\"mode == 'quiz' && quiz\">\n    <div *ngFor=\"let question of filteredQuestions\">\n      <div class=\"mb-4\">\n        <span class=\"badge bg-info\">\n          Question {{ pager.index + 1 }} of {{ pager.count }}.\n        </span>\n\n        <span *ngIf=\"config.duration\" class=\"badge bg-info float-end\">\n          Time: {{ ellapsedTime }} / {{ duration }}\n        </span>\n      </div>\n\n      <h3 class=\"fw-normal mb-4\">\n        {{ pager.index + 1 }}.\n        <span [innerHTML]=\"question.name\"></span>\n      </h3>\n      <div class=\"row text-left options\">\n        <div class=\"col-6\" *ngFor=\"let option of question.options\">\n          <div class=\"option\">\n            <label class=\"fw-normal\" [attr.for]=\"option.id\">\n              <input\n                id=\"{{ option.id }}\"\n                type=\"checkbox\"\n                [(ngModel)]=\"option.selected\"\n                (change)=\"onSelect(question, option)\"\n              />\n              {{ option.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <br />\n    <div class=\"text-center\">\n      <button\n        class=\"btn btn-outline-primary mx-2\"\n        *ngIf=\"config.allowBack\"\n        (click)=\"goTo(0)\"\n      >\n        First\n      </button>\n      <button\n        class=\"btn btn-outline-primary mx-2\"\n        *ngIf=\"config.allowBack\"\n        (click)=\"goTo(pager.index - 1)\"\n      >\n        Prev\n      </button>\n      <button\n        class=\"btn btn-outline-primary mx-2\"\n        (click)=\"goTo(pager.index + 1)\"\n      >\n        Next\n      </button>\n      <button\n        class=\"btn btn-outline-primary mx-2\"\n        *ngIf=\"config.allowBack\"\n        (click)=\"goTo(pager.count - 1)\"\n      >\n        Last\n      </button>\n    </div>\n    <br />\n  </div>\n\n  <div class=\"row text-center\" *ngIf=\"mode == 'review'\">\n    <div\n      class=\"col-4 cursor-pointer\"\n      *ngFor=\"let question of quiz.questions; let index = index\"\n    >\n      <div\n        (click)=\"goTo(index)\"\n        class=\"p-3 mb-2 {{\n          isAnswered(question) == 'Answered' ? 'bg-info' : 'bg-warning'\n        }}\"\n      >\n        {{ index + 1 }}. {{ isAnswered(question) }}\n      </div>\n    </div>\n  </div>\n  <div class=\"result\" *ngIf=\"mode == 'result'\">\n    <h2>\n      Quiz Result:\n      <span class=\"badge bg-success\"\n        >Your Score is: {{ quizScore }} Out of {{ quizTotalScore }}</span\n      >\n    </h2>\n    <div *ngFor=\"let question of quiz.questions; let index = index\">\n      <div class=\"result-question\">\n        <h5>{{ index + 1 }}. {{ question.name }}</h5>\n        <div class=\"row\">\n          <div class=\"col-6\" *ngFor=\"let Option of question.options\">\n            <input\n              id=\"{{ Option.id }}\"\n              type=\"checkbox\"\n              disabled=\"disabled\"\n              [(ngModel)]=\"Option.selected\"\n            />\n            {{ Option.name }}\n          </div>\n        </div>\n        <div\n          class=\"p-1 m-2 alert {{\n            isCorrect(question) == 'correct' ? 'alert-success' : 'alert-danger'\n          }}\"\n        >\n          Your answer is {{ isCorrect(question) }}.\n        </div>\n      </div>\n    </div>\n    <h4 class=\"alert alert-info text-center\">You may close this window now.</h4>\n  </div>\n  <hr />\n  <div *ngIf=\"mode != 'result'\">\n    <button class=\"btn btn-warning mx-2\" (click)=\"mode = 'quiz'\">Quiz</button>\n    <button class=\"btn btn-info mx-2\" (click)=\"mode = 'review'\">Review</button>\n    <button class=\"btn btn-primary mx-2\" (click)=\"onSubmit()\">\n      Submit Quiz\n    </button>\n  </div>\n</div>\n","import { Option } from './option';\n\nexport class Question {\n    id: number;\n    name: string;\n    questionTypeId: number;\n    options: Option[];\n    answered: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.name = data.name;\n        this.questionTypeId = data.questionTypeId;\n        this.options = [];\n        data.options.forEach(o => {\n            this.options.push(new Option(o));\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'online-test-application';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand ml-2 fw-bolder\" routerLink=\"/quiz\">Online Quiz</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNav\"\n    aria-controls=\"navbarNav\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav ms-auto\">\n      <li class=\"nav-item\">\n        <a\n          class=\"nav-link btn-outline-primary btn-sm text-light fw-bolder\"\n          routerLink=\"/quiz\"\n          >Home</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<footer class=\"bg-dark text-center text-lg-start mt-5\">\n  <!-- Copyright -->\n  <div class=\"text-center p-3 text-light fw-bold\">\n    © 2021 Copyright:\n    <a class=\"text-light fw-bold\" routerLink=\"/quiz\">Online Quiz Application</a>\n  </div>\n  <!-- Copyright -->\n</footer>\n","export class QuizConfig {\n    allowBack: boolean;\n    allowReview: boolean;\n    autoMove: boolean;  // if boolean; it will move to next question automatically when answered.\n    duration: number;  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    pageSize: number;\n    requiredAll: boolean;  // indicates if you must answer all the questions before submitting.\n    richText: boolean;\n    shuffleQuestions: boolean;\n    shuffleOptions: boolean;\n    showClock: boolean;\n    showPager: boolean;\n    theme: string;\n\n    constructor(data: any) {\n        data = data || {};\n        this.allowBack = data.allowBack;\n        this.allowReview = data.allowReview;\n        this.autoMove = data.autoMove;\n        this.duration = data.duration;\n        this.pageSize = data.pageSize;\n        this.requiredAll = data.requiredAll;\n        this.richText = data.richText;\n        this.shuffleQuestions = data.shuffleQuestions;\n        this.shuffleOptions = data.shuffleOptions;\n        this.showClock = data.showClock;\n        this.showPager = data.showPager;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuizService } from './services/quiz.service';\nimport { QuizListComponent } from './components/quiz-list/quiz-list.component';\nimport { QuizComponent } from './components/quiz/quiz.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'quiz/:quizName', component: QuizComponent },\n  { path: 'quiz', component: QuizListComponent },\n  { path: '', redirectTo: '/quiz', pathMatch: 'full' },\n  { path: '**', redirectTo: '/quiz', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [AppComponent, QuizListComponent, QuizComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n  ],\n  providers: [QuizService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export class Option {\n    id: number;\n    questionId: number;\n    name: string;\n    isAnswer: boolean;\n    selected: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.questionId = data.questionId;\n        this.name = data.name;\n        this.isAnswer = data.isAnswer;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuizService {\n  constructor(private http: HttpClient) {}\n\n  get(url: string) {\n    return this.http.get(url);\n  }\n\n  getAll() {\n    return [\n      {\n        id: 'data/javascript.json',\n        name: 'JavaScript',\n        description:\n          \"Let's Play javascript quiz that will help you clear the concepts and will prepare you for interviews. This is a basic level quiz and contains 10 Questions.\",\n        imageUrl: 'assets/images/JS.png',\n      },\n      {\n        id: 'data/aspnet.json',\n        name: 'Asp.Net',\n        description:\n          \"Let's Play Asp.Net quiz that will help you clear the concepts and will prepare you for interviews. This is a basic level quiz and contains 10 Questions.\",\n        imageUrl: 'assets/images/ASP.png',\n      },\n      {\n        id: 'data/csharp.json',\n        name: 'C Sharp',\n        description:\n          \"Let's Play C# quiz that will help you clear the concepts and will prepare you for interviews. This is a basic level quiz and contains 10 Questions.\",\n        imageUrl: 'assets/images/CSHARP.png',\n      },\n    ];\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}